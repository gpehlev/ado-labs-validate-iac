name: 'Terraform-CI'

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - main

env:
  TF_LOG: INFO
  TF_IN_AUTOMATION: TRUE

jobs:
  terraform:
    name: 'Terraform-CI'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest or windows-latest
    # Set the working directory to main for the config files
    defaults:
      run:
        shell: bash
        working-directory: ./main

    steps:
      # Checkout the repository on the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      # Install the preferred version of Terraform CLI
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest
          # cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }} # Disabled: The API token for a Terraform Cloud/Enterprise instance to place within the credentials block of the Terraform CLI configuration file (optional)

      # Install Terragrunt
      - name: Install Terragrunt
        run: |
          sudo wget -q -O /bin/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/v0.39.2/terragrunt_linux_amd64"
          sudo chmod +x /bin/terragrunt
          terragrunt -v

      # Run terraform fmt
      - name: Terraform Format
        id: tf_fmt
        if: github.ref != 'refs/heads/main'
        run: terraform fmt

      # Run terragrunt hclfmt
      - name: Terragrunt Format
        id: tg_hclfmt
        if: github.ref != 'refs/heads/main'
        run: terragrunt hclfmt

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        id: tf_init
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
          STORAGE_ACCOUNT: ${{ secrets.STORAGE_ACCOUNT }}
          CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
        run: terraform init -backend-config="storage_account_name=$STORAGE_ACCOUNT" -backend-config="container_name=$CONTAINER_NAME" -backend-config="resource_group_name=$RESOURCE_GROUP"

      # Run terraform validate
      - name: Terraform Validate
        id: tf_validate
        if: github.ref != 'refs/heads/main' && (success() || failure())
        run: terraform validate -no-color

      # Run terragrunt validate
      - name: Terragrunt Validate
        id: tg_validate
        if: github.ref != 'refs/heads/main' && (success() || failure())
        run: terragrunt run-all validate